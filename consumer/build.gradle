import com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask

buildscript {
    dependencies {
        classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.17.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

defaultTasks 'clean', 'generateAvro', 'assemble', 'build', 'test'


group = 'net.hackbee.kafka.example'
version = '1.0.0'
sourceCompatibility = '11'

apply plugin: "com.commercehub.gradle.plugin.avro"

repositories {
    mavenCentral()
    maven { url "http://packages.confluent.io/maven/" }
}

task generateAvro(type: GenerateAvroJavaTask) {
    source("src/main/resources/avro")
    outputDir = file("$buildDir/generated-sources/")
}

sourceSets {
    generated {
        java.srcDir "$buildDir/generated-sources/"
    }

    main {
        compileClasspath += generated.output
        runtimeClasspath += generated.output
    }

    test {
        compileClasspath += generated.output
        runtimeClasspath += generated.output
    }
}

configurations {
    generatedImplementation.extendsFrom implementation
    generatedRuntimeOnly.extendsFrom runtimeOnly
}

compileJava.dependsOn(generateAvro)
compileJava {
    sourceCompatibility = project.properties['sourceCompatibility']
    targetCompatibility = project.properties['targetCompatibility']
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'io.confluent:kafka-avro-serializer:5.2.2'
    implementation 'org.apache.avro:avro:1.9.1'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.kafka:spring-kafka-test'
}

test {
    useJUnitPlatform()
}
